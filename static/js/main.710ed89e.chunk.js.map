{"version":3,"sources":["redux/contacts/contactsActions.js","services/contacts-api.js","redux/contacts/contactsOperations.js","redux/contacts/contactsReducer.js","redux/store/phoneBook-store.js","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.styled.js","components/AppBar/AppBar.js","redux/contacts/contacts-selectors.js","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/IconButton/IconButton.styled.jsx","components/IconButton/IconButton.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","redux/views/ContactsView.js","redux/views/HomeView.js","redux/views/RegisterView.js","redux/views/LoginView.js","App.jsx","reportWebVitals.js","index.js"],"names":["changeFilter","createAction","axios","defaults","baseURL","getContact","a","get","data","postContact","contact","post","deleteContact","id","delete","fetchContacts","createAsyncThunk","_","rejectWithValue","contacts","message","addItem","item","deleteItem","items","createReducer","fulfilled","action","payload","state","filter","isLoading","pending","rejected","error","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ContainerCustom","styled","div","Container","children","Link","NavLink","Nav","h2","nav","Navlogo","styles","link","color","Navigation","exact","to","style","activeClassName","className","AuthNav","container","display","alignItems","avatar","marginRight","name","fontWeight","UserMenu","defaultAvatar","src","alt","width","type","Header","header","AppBar","getItems","getFilter","getVisibleContacts","console","log","normalizedFilter","toLowerCase","includes","CustomButton","button","Button","onClick","text","Form","form","InputDiv","Input","input","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","stateContacts","useSelector","handleChange","event","currentTarget","value","clearForm","onSubmit","e","preventDefault","find","toast","warn","success","transition","Zoom","Provider","size","onChange","pattern","title","required","autoComplete","placeholder","List","ul","Item","li","CustomIconButton","IconButton","defaultProps","ContactList","useEffect","map","FilterContainer","Filter","ContactsView","HomeView","RegisterView","LoginView","login","password","App","path","position","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.710ed89e.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\n\n// Это 3 синхронных actions, кот-е дойдут до редюсера\n\n//\n// pending\n// export const fetchContactsRequest = createAction(\n//   'contacts/fetchContactsRequest',\n// )\n// //fullfilled\n// export const fetchContactsSuccess = createAction(\n//   'contacts/fetchContactsSuccess',\n// )\n// // reject\n// export const fetchContactsError = createAction('contacts/fetchContactsError')\n\nexport const changeFilter = createAction('contacts/changeFilter')\n\n// export const addContact = createAction('contacts/add')\n\n// export const deleteContact = createAction('contacts/delete')\n","import axios from 'axios'\n\naxios.defaults.baseURL = 'http://localhost:7777'\n\nexport const getContact = async () => {\n  const { data } = await axios.get('/contacts')\n  return data\n}\n\nexport const postContact = async (contact) => {\n  const { data } = await axios.post('/contacts', contact)\n  return data\n}\n\nexport const deleteContact = async (id) => {\n  await axios.delete(`/contacts/${id}`)\n  return id\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n// import * as contactsActions from './contactsActions.js'\nimport {\n  getContact,\n  postContact,\n  deleteContact,\n} from '../../services/contacts-api'\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await getContact()\n      return contacts\n    } catch (error) {\n      return rejectWithValue(error.message)\n    }\n  },\n)\n\nexport const addItem = createAsyncThunk(\n  'contacts/add',\n  async (item, { rejectWithValue }) => {\n    try {\n      const contact = await postContact(item)\n      return contact\n    } catch (error) {\n      return rejectWithValue(error.message)\n    }\n  },\n)\n\nexport const deleteItem = createAsyncThunk(\n  'contacts/delete',\n  async (id, { rejectWithValue }) => {\n    try {\n      const contact = await deleteContact(id)\n      return contact\n    } catch (error) {\n      return rejectWithValue(error.message)\n    }\n  },\n)\n\n// Операция без createAsyncThunk\n// export const fetchContacts = () => async (dispatch) => {\n//   // вызов action creator. Ничего не передаем, т.к. это будет true или false\n//   dispatch(contactsActions.fetchContactsRequest())\n\n//   try {\n//     const contacts = await getContact()\n//     dispatch(contactsActions.fetchContactsSuccess(contacts))\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError(error.message))\n//   }\n// }\n\n//\n// export const postContacts = () => (dispatch) => {\n//   dispatch(contactsActions.fetchContactsRequest())\n\n//   const contacts = addContact()\n//   dispatch(contactsActions.fetchContactsSuccess(contacts))\n\n//   try {\n//     const contacts = addContact()\n//     dispatch(contactsActions.fetchContactsSuccess(contacts))\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError(error.message))\n//   }\n// }\n\n// без async await: fetch().then().catch  По результату then() вызываем success, по результату catch() - error\n","import { combineReducers, createReducer } from '@reduxjs/toolkit'\n// import * as contactsActions from './contactsActions'\nimport { changeFilter } from './contactsActions'\nimport { fetchContacts, addItem, deleteItem } from './contactsOperations'\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addItem.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteItem.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n})\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n})\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n})\n\nexport default combineReducers({\n  items,\n  isLoading,\n  error,\n  filter,\n})\n\n// С экшнами без createAsyncThunk\n// const items = createReducer([], {\n//   [fetchContacts.fetchContactsSuccess]: (_, action) => action.payload,\n// })\n\n// const isLoading = createReducer(false, {\n//   [contactsActions.fetchContactsRequest]: () => true,\n//   [contactsActions.fetchContactsSuccess]: () => false,\n//   [contactsActions.fetchContactsError]: () => false,\n// })\n\n// const error = createReducer(null, {\n//   [contactsActions.fetchContactsError]: (_, action) => action.payload,\n//   [contactsActions.fetchContactsRequest]: () => null,\n// })\n\n// const filter = createReducer('', {\n//   [contactsActions.changeFilter]: (_, action) => action.payload,\n// })\n//=======\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport contactsReducer from '../contacts/contactsReducer'\n\nconst middleware = [...getDefaultMiddleware(), logger]\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n})\n\nexport default store\n// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\n// import logger from 'redux-logger'\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage'\n// import { rootReducer } from '../reducers/index'\n// import itemsReducer from '../slice/contacts'\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   logger,\n// ]\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n//   // blacklist: ['filter'],\n// }\n\n// // const rootReducer = combineReducers({\n// //   items: itemsReducer,\n// //   filter: filterReducer,\n// // })\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\n\n// // Пишем для себя, чтоб понять структуру\n// // const initialState = {\n// //   contacts: {\n// //     items: [],\n// //     filter: '',\n// //   },\n// // }\n\n// // Стандартная болванка reducer\n// // const reducer = (state = initialState, action) => {\n// //   console.log('log action in reducer >>', action)\n// //   return state\n// // }\n\n// // Старое с redux без toolkit\n// // const store = createStore(rootReducer, devToolsEnhancer())\n\n// const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware,\n//   devTools: process.env.NODE_ENV !== 'production',\n// })\n\n// const persistor = persistStore(store)\n\n// export default { store, persistor }\n","import styled from '@emotion/styled'\n\nexport const ContainerCustom = styled.div`\n  /* margin: 0 auto; */\n  padding-left: 20px;\n  padding-right: 20px;\n  /* background-color: rgb(0 0 0 / 12%); */\n  /* background-image: linear-gradient(28deg, #a8ff36, transparent); */\n  /* border: 2px solid #4a4a4a; */\n  /* border-radius: 5px; */\n  /* max-width: 400px; */\n`\n","import { ContainerCustom } from './Container.styled'\n\nfunction Container({ children }) {\n  return <ContainerCustom>{children}</ContainerCustom>\n}\n\nexport default Container\n","import { NavLink } from 'react-router-dom'\r\nimport styled from '@emotion/styled'\r\n\r\n// export const NavLink = styled.link`\r\n//   display: flex;\r\n//   justify-content: space-beetween;\r\n\r\n//   padding-left: 20px;\r\n//   hover: green;\r\n// // `\r\n// export const activeClass = styled.class`\r\n//   hover: green;\r\n// `\r\nexport const Link = styled(NavLink)`\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  /* justify-content: space-beetween; */\r\n  // &:hover {\r\n  //   color: #6595ff;\r\n  // }\r\n  &.activeLink {\r\n    color: #fd8100;\r\n  }\r\n  &.link {\r\n    padding-left: 25px;\r\n  }\r\n`\r\nexport const HeaderTitle = styled.h2`\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  color: #fff;\r\n`\r\n\r\nexport const Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\nexport const Navlogo = styled(NavLink)`\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  padding-right: 25px;\r\n  text-decoration: none;\r\n  color: #fd8100;\r\n`\r\n","import Container from '../Container'\r\nimport { Link, HeaderTitle, Nav, Navlogo } from './Navigation.styled'\r\n\r\nconst styles = {\r\n  link: {\r\n    color: 'rgb(91 169 236)',\r\n  },\r\n}\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Nav>\r\n      <div>\r\n        <Navlogo exact to=\"/\">\r\n          <span style={styles.link}>Phone</span>book\r\n        </Navlogo>\r\n      </div>\r\n      <div>\r\n        <Link activeClassName=\"activeLink\" exact to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link className=\"link\" activeClassName=\"activeLink\" to=\"/contacts\">\r\n          Contacts\r\n        </Link>\r\n      </div>\r\n    </Nav>\r\n  )\r\n}\r\nexport default Navigation\r\n","import React from 'react'\r\n// import { NavLink } from 'react-router-dom'\r\nimport { Link } from '../Navigation/Navigation.styled'\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <div>\r\n      <Link\r\n        to=\"/register\"\r\n        activeClassName=\"activeLink\"\r\n        exact\r\n        // style={styles.link}\r\n        // activeStyle={styles.activeLink}\r\n      >\r\n        Registration\r\n      </Link>\r\n      <Link\r\n        className=\"link\"\r\n        activeClassName=\"activeLink\"\r\n        to=\"/login\"\r\n        exact\r\n        // style={styles.link}\r\n        // activeStyle={styles.activeLink}\r\n      >\r\n        Log In\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthNav\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import defaultAvatar from './default-avatar.png'\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n}\r\n\r\nconst UserMenu = () => {\r\n  //   const dispatch = useDispatch();\r\n  //   const name = useSelector(authSelectors.getUsername);\r\n  const avatar = defaultAvatar\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Welcome, </span>\r\n      <button\r\n        type=\"button\" //onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nexport default UserMenu\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  background-image: linear-gradient(360deg, rgb(60 51 132), #000000);\r\n`\r\n","import Navigation from '../Navigation'\r\nimport AuthNav from '../AuthNav/AuthNav'\r\nimport UserMenu from '../UserMenu'\r\nimport { Header } from './AppBar.styled'\r\n\r\nconst AppBar = () => {\r\n  return (\r\n    <Header>\r\n      <Navigation />\r\n      <AuthNav />\r\n      <UserMenu />\r\n    </Header>\r\n  )\r\n}\r\nexport default AppBar\r\n","export const getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoading = (state) => state.contacts.isLoading;\n// console.log('state >>', state)\n// console.log(' getFilter >>', getFilter())\n\nexport const getVisibleContacts = (state) => {\n  const filter = getFilter(state);\n  console.log(\"filter >>\", filter);\n  const items = getItems(state);\n  console.log(\"items >>\", items);\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter((item) =>\n    item.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from '@emotion/styled'\nexport const CustomButton = styled.button`\n  font-weight: 400;\n  line-height: 1.33;\n    width: 197px;\n  background-color: orange;\n  margin-top: 15px;\n  margin-left: 29px;\n  border: none;\n  outline: none;\n  border-radius: 4px;\n  text-align: center;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n    &:focus,\n  &:hover {\n    box-shadow: 2px 3px 17px 0px rgb(0 0 0 / 78%), -1px 0px 2px rgb(0 0 0 / 14%), 0px 2px 1px rgb(0 0 0 / 20%);\n    transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1);\n`\n","import React from 'react'\nimport { CustomButton } from './Button.styled'\n\nfunction Button({ onClick, text }) {\n  return <CustomButton onClick={onClick}>{text}</CustomButton>\n}\n\nexport default Button\n","import styled from '@emotion/styled'\n\nexport const Form = styled.form`\n  padding: 15px;\n`\n\nexport const InputDiv = styled.div`\n  display: flex;\n`\nexport const Input = styled.input`\n  padding: 3px 10px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  box-sizing: border-box;\n  border-radius: 4px;\n  &:focus,\n  &:hover {\n    border-color: #00adffa8;\n    outline: none;\n    transition: border-color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import { addItem } from '../../redux/actions/item'\nimport { addItem } from '../../redux/contacts/contactsOperations'\nimport { getItems } from '../../redux/contacts/contacts-selectors'\n// import { addItem } from '../../redux/slice/contacts'\nimport { toast, Zoom } from 'react-toastify'\n// import { v4 as uuidv4 } from 'uuid'\n\nimport { FcPhoneAndroid, FcBusinessContact } from 'react-icons/fc'\nimport { IconContext } from 'react-icons'\n\nimport Button from '../Button'\nimport { Form, InputDiv, Input } from './ContactForm.styled'\n\nconst ContactForm = () => {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const dispatch = useDispatch()\n  const stateContacts = useSelector(getItems)\n  console.log('stateContacts >>', stateContacts)\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget\n\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n      default:\n        //можно вместо return написать, например, \"Неподдерживаемый тип поля\"\n        return\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const findContact = stateContacts.find((contact) =>\n      contact.name.includes(name),\n    )\n    if (findContact) {\n      toast.warn(`${name} is already in contacts`)\n      return\n    }\n    const newContact = { name, number }\n    dispatch(addItem(newContact)) &&\n      toast.success(`\"${name}\" added to contacts `, {\n        transition: Zoom,\n      })\n    clearForm()\n  }\n\n  const clearForm = () => {\n    setName('')\n    setNumber('')\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <label>\n          <h2>Name</h2>\n          <InputDiv>\n            <IconContext.Provider value={{ size: '23px' }}>\n              <FcBusinessContact />\n            </IconContext.Provider>\n            &nbsp;\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              autoComplete=\"off\"\n              placeholder=\"Bon Jovi\"\n            />\n          </InputDiv>\n        </label>\n\n        <label>\n          <h2>Number</h2>\n          <InputDiv>\n            <IconContext.Provider value={{ size: '23px' }}>\n              <FcPhoneAndroid />\n            </IconContext.Provider>\n            &nbsp;\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              autoComplete=\"off\"\n              placeholder=\"123-456\"\n            />\n          </InputDiv>\n        </label>\n        <Button text=\"Add contact\" />\n      </Form>\n    </div>\n  )\n}\n\nexport default ContactForm\n","import styled from '@emotion/styled'\n\nexport const List = styled.ul`\n  border-radius: 4px;\n  padding: 24px;\n  //   background-color: #7c7c7c;\n  //   color: #fff;\n`\nexport const Item = styled.li`\n  display: flex;\n  padding-bottom: 10px;\n  justify-content: space-between;\n  align-items: baseline;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n`\n","import styled from '@emotion/styled'\n\nexport const CustomIconButton = styled.button`\n  background-color: transparent;\n  border: none;\ntransition: 100ms;\n    &:focus,\n  &:hover {\n\n    transform: scale(1.1);\n    color: red;\n`\n","import React from 'react'\nimport { CustomIconButton } from './IconButton.styled'\nimport PropTypes from 'prop-types'\n\nfunction IconButton({ children, onClick }) {\n  return (\n    <CustomIconButton type=\"button\" onClick={onClick}>\n      {children}\n    </CustomIconButton>\n  )\n}\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n}\n\nIconButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n}\n\nexport default IconButton\n","// import PropTypes from 'prop-types'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RiDeleteBin6Fill } from 'react-icons/ri'\nimport { IconContext } from 'react-icons'\n\n// import { getVisibleContacts } from '../../redux/selectors/contacts-selectors'\n// import { deleteItem } from '../../redux/actions/item'\nimport { deleteItem } from '../../redux/contacts/contactsOperations'\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors'\nimport { fetchContacts } from '../../redux/contacts/contactsOperations'\n\nimport { List, Item } from './ContactList.styled'\nimport IconButton from '../IconButton'\n\nexport default function ContactList() {\n  const dispatch = useDispatch()\n  // console.log('items >>', items)\n  const contacts = useSelector(getVisibleContacts)\n  const deleteContact = (id) => {\n    dispatch(deleteItem(id))\n  }\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  console.log('contacts >>', contacts)\n  return (\n    <List>\n      {contacts.map((item) => (\n        <Item key={item.id}>\n          {item.name}: {item.number}\n          <IconButton onClick={() => deleteContact(item.id)}>\n            <IconContext.Provider value={{ size: '23px' }}>\n              <RiDeleteBin6Fill />\n            </IconContext.Provider>\n          </IconButton>\n        </Item>\n      ))}\n    </List>\n  )\n}\n\n// ContactList.propTypes = {\n//   // contacts: PropTypes.array.isRequired,\n//   // onClick: PropTypes.func.isRequired,\n// }\n","import styled from '@emotion/styled'\n\nexport const FilterContainer = styled.div`\n  padding: 15px;\n`\n","// import PropTypes from 'prop-types'\n\nimport React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { IconContext } from 'react-icons'\nimport { FcSearch } from 'react-icons/fc'\n\nimport { InputDiv } from '../ContactForm/ContactForm.styled'\nimport { Input } from '../ContactForm/ContactForm.styled'\nimport { FilterContainer } from './Filter.styled'\n// import { getFilter } from '../../redux/selectors/contacts-selectors'\n// import { filterItem } from '../../redux/actions/filter'\nimport { getFilter } from '../../redux/contacts/contacts-selectors'\nimport { changeFilter } from '../../redux/contacts/contactsActions'\n\nexport default function Filter({ onChange }) {\n  const dispatch = useDispatch()\n  const filter = useSelector(getFilter)\n  return (\n    <label>\n      <h2>Contacts</h2>\n      <FilterContainer>\n        <h3>Find contacts by name</h3>\n        <InputDiv>\n          <IconContext.Provider value={{ size: '23px' }}>\n            <FcSearch />\n          </IconContext.Provider>\n          &nbsp;\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={(e) => dispatch(changeFilter(e.currentTarget.value))}\n            placeholder=\"Search contact\"\n            autoComplete=\"off\"\n          />\n        </InputDiv>\n      </FilterContainer>\n    </label>\n  )\n}\n// Filter.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n//   filter: PropTypes.string.isRequired,\n// }\n","import ContactForm from '../../components/ContactForm'\r\nimport ContactList from '../../components/ContactList'\r\nimport Filter from '../../components/Filter'\r\n\r\nconst ContactsView = () => (\r\n  <section>\r\n    <div>\r\n      <ContactForm />\r\n      <Filter />\r\n    </div>\r\n    <div>\r\n      <ContactList />\r\n    </div>\r\n  </section>\r\n)\r\n\r\nexport default ContactsView\r\n","const HomeView = () => (\r\n  <h1>\r\n    This is your private \"Phonebook\" where you can safely store, add and safe\r\n    you contacts\r\n  </h1>\r\n)\r\nexport default HomeView\r\n","const RegisterView = () => (\r\n  <form>\r\n    <div>\r\n      <label>\r\n        Name <input type=\"text\" name=\"name\"></input>\r\n      </label>\r\n    </div>\r\n    <div>\r\n      <label>\r\n        Login <input type=\"text\" name=\"login\"></input>\r\n      </label>\r\n    </div>\r\n    <div>\r\n      <label>\r\n        Password<input type=\"text\" name=\"password\"></input>\r\n      </label>\r\n    </div>\r\n\r\n    <button type=\"button\">Sign in</button>\r\n  </form>\r\n)\r\n\r\nexport default RegisterView\r\n","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst LoginView = () => {\r\n  const dispatch = useDispatch()\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  return (\r\n    <form>\r\n      <div>\r\n        <label>\r\n          login <input type=\"text\" name=\"login\" value={login}></input>\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          password <input type=\"text\" name=\"password\" value={password}></input>\r\n        </label>\r\n      </div>\r\n      <button type=\"button\">Log in</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginView\r\n","// import { useState, useEffect } from 'react'\n// import { connect } from 'react-redux'\n// import * as actions from './redux/actions/explain-actions'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport AppBar from './components/AppBar'\n\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport ContactsView from './redux/views/ContactsView'\nimport HomeView from './redux/views/HomeView'\nimport RegisterView from './redux/views/RegisterView'\nimport LoginView from './redux/views/LoginView'\nimport Container from './components/Container'\n// import { v4 as uuidv4 } from 'uuid'\n\nconst App = () => {\n  return (\n    <>\n      <AppBar />\n      <Container>\n        {/* <h1>Phonebook</h1> */}\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomeView />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterView />\n          </Route>\n          <Route path=\"/login\">\n            <LoginView />\n          </Route>\n          <Route path=\"/contacts\">\n            <ContactsView />\n          </Route>\n          <Redirect to=\"/\" />\n          <Route></Route>\n        </Switch>\n\n        <ToastContainer position=\"top-center\" autoClose={2000} />\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport store from './redux/store/phoneBook-store'\n\n// import { myAction } from './redux/actions/phoneBook-actions'\nimport { Provider } from 'react-redux'\n// import { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n        {/* </PersistGate> */}\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\nreportWebVitals()\n// // curried functions\n// const greeting = function (greeting) {\n//   return function (name) {\n//     console.log(`${greeting}, ${name}`)\n//   }\n// }\n\n// const fullGreeting = greeting('Nice to meet you')\n// fullGreeting('Adam')\n// fullGreeting('Annet')\n// greeting('Nice to meet you')('Alice')\n\n// const curriedGreeting = function (greeting) {\n//   return function (name) {\n//     console.log(`${greeting}, ${name}`)\n//   }\n// }\n\n// const fullCurriedGreeting = curriedGreeting('Hello, Mr.')\n// fullCurriedGreeting('John')\n// // console.log(fullCurriedGreeting())\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}