{"version":3,"sources":["redux/actions/contacts-actions.js","services/contacts-api.js","redux/operations/contacts-operations.js","redux/reducers/contacts-reducer.js","services/auth-api.js","redux/operations/auth-operations.js","redux/reducers/auth-slice.js","redux/store/phoneBook-store.js","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","redux/selectors/auth-selectors.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.styled.js","components/AppBar/AppBar.js","redux/selectors/contacts-selectors.js","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/IconButton/IconButton.styled.jsx","components/IconButton/IconButton.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","redux/views/ContactsView.js","redux/views/HomeView.js","redux/views/RegisterView.js","redux/views/LoginView.js","App.jsx","reportWebVitals.js","index.js"],"names":["changeFilter","createAction","axios","defaults","baseURL","getContact","a","get","data","postContact","contact","post","deleteContact","id","delete","fetchContacts","createAsyncThunk","_","rejectWithValue","contacts","message","addItem","item","deleteItem","items","createReducer","fulfilled","action","payload","state","filter","isLoading","pending","rejected","error","combineReducers","signUpUser","newUserData","logInUser","userData","logOutUser","token","headers","common","Authorization","register","user","toast","logIn","logOut","refreshCurrentUser","thunkAPI","getState","persistedToken","auth","console","log","authOperations","authSlice","createSlice","name","initialState","email","isLoggedIn","extraReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ContainerCustom","styled","div","Container","children","Link","NavLink","Nav","h2","nav","Navlogo","styles","link","color","Navigation","exact","to","style","activeClassName","className","AuthNav","authSelectors","getIsLoggedIn","getUserName","container","display","alignItems","avatar","marginRight","fontWeight","UserMenu","dispatch","useDispatch","useSelector","defaultAvatar","src","alt","width","type","onClick","Header","header","AppBar","getItems","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","CustomButton","button","Button","text","Form","form","InputDiv","Input","input","ContactForm","useState","setName","number","setNumber","stateContacts","handleChange","event","currentTarget","value","clearForm","onSubmit","e","preventDefault","find","warn","success","transition","Zoom","Provider","size","onChange","pattern","title","required","autoComplete","placeholder","List","ul","Item","li","CustomIconButton","IconButton","defaultProps","ContactList","useEffect","map","FilterContainer","Filter","ContactsView","HomeView","RegisterView","setEmail","password","setPassword","target","LoginView","App","path","position","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7bb9545f.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\n\n// Это 3 синхронных actions, кот-е дойдут до редюсера\n//\n// pending\n// export const fetchContactsRequest = createAction(\n//   'contacts/fetchContactsRequest',\n// )\n// //fullfilled\n// export const fetchContactsSuccess = createAction(\n//   'contacts/fetchContactsSuccess',\n// )\n// // reject\n// export const fetchContactsError = createAction('contacts/fetchContactsError')\n\nexport const changeFilter = createAction('contacts/changeFilter')\n\n// addContact и deleteContact перенесли в operations т.к. это асинхронные экшены с запросом API\n// export const addContact = createAction('contacts/add')\n// export const deleteContact = createAction('contacts/delete')\n","import axios from 'axios'\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\n\nexport const getContact = async () => {\n  const { data } = await axios.get('/contacts')\n  return data\n}\n\nexport const postContact = async (contact) => {\n  const { data } = await axios.post('/contacts', contact)\n  return data\n}\n\nexport const deleteContact = async (id) => {\n  await axios.delete(`/contacts/${id}`)\n  return id\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  getContact,\n  postContact,\n  deleteContact,\n} from '../../services/contacts-api'\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await getContact()\n      return contacts\n    } catch (error) {\n      return rejectWithValue(error.message)\n    }\n  },\n)\n\nexport const addItem = createAsyncThunk(\n  'contacts/add',\n  async (item, { rejectWithValue }) => {\n    try {\n      const contact = await postContact(item)\n      return contact\n    } catch (error) {\n      return rejectWithValue(error.message)\n    }\n  },\n)\n\nexport const deleteItem = createAsyncThunk(\n  'contacts/delete',\n  async (id, { rejectWithValue }) => {\n    try {\n      const contact = await deleteContact(id)\n      return contact\n    } catch (error) {\n      return rejectWithValue(error.message)\n    }\n  },\n)\n\n// Операция без createAsyncThunk\n// export const fetchContacts = () => async (dispatch) => {\n//   // вызов action creator. Ничего не передаем, т.к. это будет true или false\n//   dispatch(contactsActions.fetchContactsRequest())\n\n//   try {\n//     const contacts = await getContact()\n//     dispatch(contactsActions.fetchContactsSuccess(contacts))\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError(error.message))\n//   }\n// }\n\n// без async await: fetch().then().catch  По результату then() вызываем success, по результату catch() - error\n","import { combineReducers, createReducer } from '@reduxjs/toolkit'\nimport { changeFilter } from '../actions/contacts-actions'\nimport {\n  fetchContacts,\n  addItem,\n  deleteItem,\n} from '../operations/contacts-operations'\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addItem.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteItem.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n})\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n})\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n})\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n})\n\nexport default combineReducers({\n  items,\n  isLoading,\n  error,\n  filter,\n})\n","import axios from 'axios'\r\n//name: qwertyqwerty\r\n//email: qwertyqwerty@mail.com\r\n\r\n//name: ghjghjghj\r\n//email: ghjghjghj@mail.com\r\n//ghjghjghj123\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\r\n\r\n// axios за нас уже делает JSON.stringify (НЕ ЗАБЫВАТЬ!!! если не используем axios)\r\nexport const signUpUser = async (newUserData) => {\r\n  const { data } = await axios.post(`/users/signup`, newUserData)\r\n  return data\r\n}\r\n\r\nexport const logInUser = async (userData) => {\r\n  const { data } = await axios.post('/users/login', userData)\r\n  return data\r\n}\r\n\r\nexport const logOutUser = async () => {\r\n  const { data } = await axios.post('/users/logout')\r\n  return data\r\n}\r\n","import axios from 'axios'\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { signUpUser, logInUser, logOutUser } from '../../services/auth-api'\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = ''\r\n  },\r\n}\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const user = await signUpUser(userData)\r\n      token.set(user.token)\r\n      return user\r\n    } catch (error) {\r\n      toast.error(`${error.message}`)\r\n      return rejectWithValue(error.message)\r\n    }\r\n  },\r\n)\r\n\r\nexport const logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const user = await logInUser(userData)\r\n      token.set(user.token)\r\n      //   toast.success(`Welcome back ${name}`, {\r\n      //     transition: Zoom,\r\n      //   })\r\n      return user\r\n    } catch (error) {\r\n      return rejectWithValue(error.message)\r\n    }\r\n  },\r\n)\r\n\r\nexport const logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      logOutUser()\r\n      token.unset()\r\n    } catch (error) {\r\n      return rejectWithValue(error.message)\r\n    }\r\n  },\r\n)\r\n\r\nexport const refreshCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState()\r\n    const persistedToken = state.auth.token\r\n\r\n    if (persistedToken === null) {\r\n      console.log('Токена нет, уходим из refreshCurrentUser')\r\n      return thunkAPI.rejectWithValue()\r\n    }\r\n\r\n    token.set(persistedToken)\r\n    try {\r\n      const { data } = await axios.get('/users/current')\r\n      return data\r\n    } catch (error) {\r\n      toast.error(`${error.message}`)\r\n      return thunkAPI.rejectWithValue(error.message)\r\n    }\r\n  },\r\n)\r\n\r\nconst authOperations = {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  refreshCurrentUser,\r\n}\r\n\r\nexport default authOperations\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  refreshCurrentUser,\r\n} from '../operations/auth-operations'\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  error: null,\r\n  isLoading: null,\r\n}\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled](state, action) {\r\n      state.user = action.payload.user\r\n      state.token = action.payload.token\r\n      state.isLoggedIn = true\r\n      state.isLoading = false\r\n    },\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user\r\n      state.token = action.payload.token\r\n      state.isLoggedIn = true\r\n      state.isLoading = false\r\n    },\r\n    [logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null }\r\n      state.token = null\r\n      state.isLoggedIn = false\r\n    },\r\n    [refreshCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload\r\n      state.isLoggedIn = true\r\n    },\r\n  },\r\n})\r\n\r\nexport default authSlice.reducer\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport contactsReducer from '../reducers/contacts-reducer'\nimport authReducer from '../reducers/auth-slice'\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n]\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n}\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n})\n\nexport const persistor = persistStore(store)\n","import styled from '@emotion/styled'\n\nexport const ContainerCustom = styled.div`\n  /* margin: 0 auto; */\n  padding-left: 20px;\n  padding-right: 20px;\n  /* background-color: rgb(0 0 0 / 12%); */\n  /* background-image: linear-gradient(28deg, #a8ff36, transparent); */\n  /* border: 2px solid #4a4a4a; */\n  /* border-radius: 5px; */\n  /* max-width: 400px; */\n`\n","import { ContainerCustom } from './Container.styled'\n\nfunction Container({ children }) {\n  return <ContainerCustom>{children}</ContainerCustom>\n}\n\nexport default Container\n","import { NavLink } from 'react-router-dom'\r\nimport styled from '@emotion/styled'\r\n\r\n// export const NavLink = styled.link`\r\n//   display: flex;\r\n//   justify-content: space-beetween;\r\n\r\n//   padding-left: 20px;\r\n//   hover: green;\r\n// // `\r\n// export const activeClass = styled.class`\r\n//   hover: green;\r\n// `\r\nexport const Link = styled(NavLink)`\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  /* justify-content: space-beetween; */\r\n  // &:hover {\r\n  //   color: #6595ff;\r\n  // }\r\n  &.activeLink {\r\n    color: #fd8100;\r\n  }\r\n  &.link {\r\n    padding-left: 25px;\r\n  }\r\n`\r\nexport const HeaderTitle = styled.h2`\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  color: #fff;\r\n`\r\n\r\nexport const Nav = styled.nav`\r\n  align-items: center;\r\n  display: flex;\r\n  /* justify-content: space-between; */\r\n`\r\nexport const Navlogo = styled(NavLink)`\r\n  font-family: Roboto;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  padding-right: 45px;\r\n  text-decoration: none;\r\n  color: #b5b5b5;\r\n`\r\n","import Container from '../Container'\r\nimport { Link, HeaderTitle, Nav, Navlogo } from './Navigation.styled'\r\n\r\nconst styles = {\r\n  link: {\r\n    color: 'rgb(91 169 236)',\r\n  },\r\n}\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Nav>\r\n      <div>\r\n        <Navlogo exact to=\"/\">\r\n          <span style={styles.link}>Phone</span>book\r\n        </Navlogo>\r\n      </div>\r\n      <div>\r\n        <Link activeClassName=\"activeLink\" exact to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link className=\"link\" activeClassName=\"activeLink\" to=\"/contacts\">\r\n          Contacts\r\n        </Link>\r\n      </div>\r\n    </Nav>\r\n  )\r\n}\r\nexport default Navigation\r\n","import React from 'react'\r\n// import { NavLink } from 'react-router-dom'\r\nimport { Link } from '../Navigation/Navigation.styled'\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <div>\r\n      <Link\r\n        to=\"/register\"\r\n        activeClassName=\"activeLink\"\r\n        exact\r\n        // style={styles.link}\r\n        // activeStyle={styles.activeLink}\r\n      >\r\n        Registration\r\n      </Link>\r\n      <Link\r\n        className=\"link\"\r\n        activeClassName=\"activeLink\"\r\n        to=\"/login\"\r\n        exact\r\n        // style={styles.link}\r\n        // activeStyle={styles.activeLink}\r\n      >\r\n        Log In\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthNav\r\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn\r\nconst getUserName = (state) => state.auth.user.name\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUserName,\r\n}\r\n\r\nexport default authSelectors\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import { useDispatch, useSelector } from 'react-redux'\r\nimport authSelectors from '../../redux/selectors/auth-selectors'\r\nimport { logOut } from '../../redux/operations/auth-operations'\r\n// import { toast, Zoom } from 'react-toastify'\r\nimport defaultAvatar from './default-avatar.png'\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n}\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch()\r\n  const name = useSelector(authSelectors.getUserName)\r\n  const avatar = defaultAvatar\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(logOut())}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nexport default UserMenu\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  background-image: linear-gradient(360deg, rgb(60 51 132), #000000);\r\n`\r\n","import { useSelector } from 'react-redux'\r\nimport Navigation from '../Navigation'\r\nimport AuthNav from '../AuthNav/AuthNav'\r\nimport UserMenu from '../UserMenu'\r\nimport { Header } from './AppBar.styled'\r\nimport authSelectors from '../../redux/selectors/auth-selectors'\r\n\r\nconst AppBar = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n  return (\r\n    <Header>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </Header>\r\n  )\r\n}\r\nexport default AppBar\r\n","export const getItems = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoading = (state) => state.contacts.isLoading;\n// console.log('state >>', state)\n// console.log(' getFilter >>', getFilter())\n\nexport const getVisibleContacts = (state) => {\n  const filter = getFilter(state);\n  console.log(\"filter >>\", filter);\n  const items = getItems(state);\n  console.log(\"items >>\", items);\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter((item) =>\n    item.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from '@emotion/styled'\nexport const CustomButton = styled.button`\n  font-weight: 400;\n  line-height: 1.33;\n    width: 197px;\n  background-color: orange;\n  margin-top: 15px;\n  margin-left: 29px;\n  border: none;\n  outline: none;\n  border-radius: 4px;\n  text-align: center;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n    &:focus,\n  &:hover {\n    box-shadow: 2px 3px 17px 0px rgb(0 0 0 / 78%), -1px 0px 2px rgb(0 0 0 / 14%), 0px 2px 1px rgb(0 0 0 / 20%);\n    transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1);\n`\n","import React from 'react'\nimport { CustomButton } from './Button.styled'\n\nfunction Button({ onClick, text }) {\n  return <CustomButton onClick={onClick}>{text}</CustomButton>\n}\n\nexport default Button\n","import styled from '@emotion/styled'\n\nexport const Form = styled.form`\n  padding: 15px;\n`\n\nexport const InputDiv = styled.div`\n  display: flex;\n`\nexport const Input = styled.input`\n  display: block;\n  padding: 3px 10px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  box-sizing: border-box;\n  border-radius: 4px;\n  &:focus,\n  &:hover {\n    border-color: #00adffa8;\n    outline: none;\n    transition: border-color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n// import { addItem } from '../../redux/actions/item'\nimport { addItem } from '../../redux/operations/contacts-operations'\nimport { getItems } from '../../redux/selectors/contacts-selectors'\n// import { addItem } from '../../redux/slice/contacts'\nimport { toast, Zoom } from 'react-toastify'\n// import { v4 as uuidv4 } from 'uuid'\n\nimport { FcPhoneAndroid, FcBusinessContact } from 'react-icons/fc'\nimport { IconContext } from 'react-icons'\n\nimport Button from '../Button'\nimport { Form, InputDiv, Input } from './ContactForm.styled'\n\nconst ContactForm = () => {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const dispatch = useDispatch()\n  const stateContacts = useSelector(getItems)\n  console.log('stateContacts >>', stateContacts)\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget\n\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n      case 'number':\n        setNumber(value)\n        break\n      default:\n        //можно вместо return написать, например, \"Неподдерживаемый тип поля\"\n        return\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const findContact = stateContacts.find((contact) =>\n      contact.name.includes(name),\n    )\n    if (findContact) {\n      toast.warn(`${name} is already in contacts`)\n      return\n    }\n    const newContact = { name, number }\n    dispatch(addItem(newContact)) &&\n      toast.success(`\"${name}\" added to contacts `, {\n        transition: Zoom,\n      })\n    clearForm()\n  }\n\n  const clearForm = () => {\n    setName('')\n    setNumber('')\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <label>\n          <h2>Name</h2>\n          <InputDiv>\n            <IconContext.Provider value={{ size: '23px' }}>\n              <FcBusinessContact />\n            </IconContext.Provider>\n            &nbsp;\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              autoComplete=\"off\"\n              placeholder=\"Bon Jovi\"\n            />\n          </InputDiv>\n        </label>\n\n        <label>\n          <h2>Number</h2>\n          <InputDiv>\n            <IconContext.Provider value={{ size: '23px' }}>\n              <FcPhoneAndroid />\n            </IconContext.Provider>\n            &nbsp;\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              autoComplete=\"off\"\n              placeholder=\"123-456\"\n            />\n          </InputDiv>\n        </label>\n        <Button text=\"Add contact\" />\n      </Form>\n    </div>\n  )\n}\n\nexport default ContactForm\n","import styled from '@emotion/styled'\n\nexport const List = styled.ul`\n  border-radius: 4px;\n  padding: 24px;\n  //   background-color: #7c7c7c;\n  //   color: #fff;\n`\nexport const Item = styled.li`\n  display: flex;\n  padding-bottom: 10px;\n  justify-content: space-between;\n  align-items: baseline;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 24px;\n`\n","import styled from '@emotion/styled'\n\nexport const CustomIconButton = styled.button`\n  background-color: transparent;\n  border: none;\ntransition: 100ms;\n    &:focus,\n  &:hover {\n\n    transform: scale(1.1);\n    color: red;\n`\n","import React from 'react'\nimport { CustomIconButton } from './IconButton.styled'\nimport PropTypes from 'prop-types'\n\nfunction IconButton({ children, onClick }) {\n  return (\n    <CustomIconButton type=\"button\" onClick={onClick}>\n      {children}\n    </CustomIconButton>\n  )\n}\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n}\n\nIconButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n}\n\nexport default IconButton\n","// import PropTypes from 'prop-types'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RiDeleteBin6Fill } from 'react-icons/ri'\nimport { IconContext } from 'react-icons'\n\n// import { getVisibleContacts } from '../../redux/selectors/contacts-selectors'\n// import { deleteItem } from '../../redux/actions/item'\nimport { deleteItem } from '../../redux/operations/contacts-operations'\nimport { getVisibleContacts } from '../../redux/selectors/contacts-selectors'\nimport { fetchContacts } from '../../redux/operations/contacts-operations'\n\nimport { List, Item } from './ContactList.styled'\nimport IconButton from '../IconButton'\n\nexport default function ContactList() {\n  const dispatch = useDispatch()\n  // console.log('items >>', items)\n  const contacts = useSelector(getVisibleContacts)\n  const deleteContact = (id) => {\n    dispatch(deleteItem(id))\n  }\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  console.log('contacts >>', contacts)\n  return (\n    <List>\n      {contacts.map((item) => (\n        <Item key={item.id}>\n          {item.name}: {item.number}\n          <IconButton onClick={() => deleteContact(item.id)}>\n            <IconContext.Provider value={{ size: '23px' }}>\n              <RiDeleteBin6Fill />\n            </IconContext.Provider>\n          </IconButton>\n        </Item>\n      ))}\n    </List>\n  )\n}\n\n// ContactList.propTypes = {\n//   // contacts: PropTypes.array.isRequired,\n//   // onClick: PropTypes.func.isRequired,\n// }\n","import styled from '@emotion/styled'\n\nexport const FilterContainer = styled.div`\n  padding: 15px;\n`\n","// import PropTypes from 'prop-types'\n\nimport React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { IconContext } from 'react-icons'\nimport { FcSearch } from 'react-icons/fc'\n\nimport { InputDiv } from '../ContactForm/ContactForm.styled'\nimport { Input } from '../ContactForm/ContactForm.styled'\nimport { FilterContainer } from './Filter.styled'\n// import { getFilter } from '../../redux/selectors/contacts-selectors'\n// import { filterItem } from '../../redux/actions/filter'\nimport { getFilter } from '../../redux/selectors/contacts-selectors'\nimport { changeFilter } from '../../redux/actions/contacts-actions'\n\nexport default function Filter({ onChange }) {\n  const dispatch = useDispatch()\n  const filter = useSelector(getFilter)\n  return (\n    <label>\n      <h2>Contacts</h2>\n      <FilterContainer>\n        <h3>Find contacts by name</h3>\n        <InputDiv>\n          <IconContext.Provider value={{ size: '23px' }}>\n            <FcSearch />\n          </IconContext.Provider>\n          &nbsp;\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={(e) => dispatch(changeFilter(e.currentTarget.value))}\n            placeholder=\"Search contact\"\n            autoComplete=\"off\"\n          />\n        </InputDiv>\n      </FilterContainer>\n    </label>\n  )\n}\n// Filter.propTypes = {\n//   onChange: PropTypes.func.isRequired,\n//   filter: PropTypes.string.isRequired,\n// }\n","import ContactForm from '../../components/ContactForm'\r\nimport ContactList from '../../components/ContactList'\r\nimport Filter from '../../components/Filter'\r\n\r\nconst ContactsView = () => (\r\n  <section>\r\n    <div>\r\n      <ContactForm />\r\n      <Filter />\r\n    </div>\r\n    <div>\r\n      <ContactList />\r\n    </div>\r\n  </section>\r\n)\r\n\r\nexport default ContactsView\r\n","const HomeView = () => (\r\n  <h1>\r\n    This is your private \"Phonebook\" where you can safely store, add and safe\r\n    you contacts\r\n  </h1>\r\n)\r\nexport default HomeView\r\n","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n// import { addItem } from '../contacts/contactsOperations'\r\n// import { getItems } from '../contacts/contacts-selectors'\r\n\r\n// import { toast, Zoom } from 'react-toastify'\r\n// import { FcPhoneAndroid, FcBusinessContact } from 'react-icons/fc'\r\n// import { IconContext } from 'react-icons'\r\nimport { register } from '../operations/auth-operations'\r\nimport Button from '../../components/Button'\r\nimport {\r\n  Form,\r\n  InputDiv,\r\n  Input,\r\n} from '../../components/ContactForm/ContactForm.styled'\r\n\r\nconst RegisterView = () => {\r\n  const dispatch = useDispatch()\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    //   const { name, value } = event.currentTarget\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value)\r\n      case 'email':\r\n        return setEmail(value)\r\n      case 'password':\r\n        return setPassword(value)\r\n      default:\r\n        //можно вместо return написать, например, \"Неподдерживаемый тип поля\"\r\n        return\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(register({ name, email, password }))\r\n    clearForm()\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setName('')\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <InputDiv>\r\n        <label>\r\n          name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            autoComplete=\"off\"\r\n          ></Input>\r\n        </label>\r\n      </InputDiv>\r\n      <InputDiv>\r\n        <label>\r\n          email\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            // required\r\n            autoComplete=\"off\"\r\n          ></Input>\r\n        </label>\r\n      </InputDiv>\r\n      <InputDiv>\r\n        <label>\r\n          password\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            // required\r\n            autoComplete=\"off\"\r\n          ></Input>\r\n        </label>\r\n      </InputDiv>\r\n      <Button text=\"Add contact\" type=\"submit\" />\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default RegisterView\r\n","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n// import { addItem } from '../contacts/contactsOperations'\r\n// import { getItems } from '../contacts/contacts-selectors'\r\n\r\n// import { toast, Zoom } from 'react-toastify'\r\n// import { FcPhoneAndroid, FcBusinessContact } from 'react-icons/fc'\r\n// import { IconContext } from 'react-icons'\r\nimport { logIn } from '../operations/auth-operations'\r\nimport Button from '../../components/Button'\r\nimport {\r\n  Form,\r\n  InputDiv,\r\n  Input,\r\n} from '../../components/ContactForm/ContactForm.styled'\r\n\r\nconst LoginView = () => {\r\n  const dispatch = useDispatch()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    //   const { name, value } = event.currentTarget\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value)\r\n      case 'password':\r\n        return setPassword(value)\r\n      default:\r\n        //можно вместо return написать, например, \"Неподдерживаемый тип поля\"\r\n        return\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(logIn({ email, password }))\r\n    clearForm()\r\n  }\r\n\r\n  const clearForm = () => {\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <InputDiv>\r\n        <label>\r\n          email{' '}\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            autoComplete=\"off\"\r\n          ></Input>\r\n        </label>\r\n      </InputDiv>\r\n      <InputDiv>\r\n        <label>\r\n          password{' '}\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            // title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            autoComplete=\"off\"\r\n          ></Input>\r\n        </label>\r\n      </InputDiv>\r\n      <Button text=\"Log In\" />\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default LoginView\r\n\r\n//=========================================\r\n\r\n// const ContactForm = () => {\r\n//   const [name, setName] = useState('')\r\n//   const [number, setNumber] = useState('')\r\n//   const dispatch = useDispatch()\r\n\r\n//   const handleChange = (event) => {\r\n//     const { name, value } = event.currentTarget\r\n\r\n//     switch (name) {\r\n//       case 'name':\r\n//         setName(value)\r\n//         break\r\n//       case 'number':\r\n//         setNumber(value)\r\n//         break\r\n//       default:\r\n//         //можно вместо return написать, например, \"Неподдерживаемый тип поля\"\r\n//         return\r\n//     }\r\n//   }\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault()\r\n\r\n//     const findContact = stateContacts.find((contact) =>\r\n//       contact.name.includes(name),\r\n//     )\r\n//     if (findContact) {\r\n//       toast.warn(`${name} is already in contacts`)\r\n//       return\r\n//     }\r\n//     const newContact = { name, number }\r\n//     dispatch(addItem(newContact)) &&\r\n//       toast.success(`\"${name}\" added to contacts `, {\r\n//         transition: Zoom,\r\n//       })\r\n//     clearForm()\r\n//   }\r\n\r\n//   const clearForm = () => {\r\n//     setName('')\r\n//     setNumber('')\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <Form onSubmit={handleSubmit}>\r\n//         <label>\r\n//           <h2>Name</h2>\r\n//           <InputDiv>\r\n//             <IconContext.Provider value={{ size: '23px' }}>\r\n//               <FcBusinessContact />\r\n//             </IconContext.Provider>\r\n//             &nbsp;\r\n//             <Input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               value={name}\r\n//               onChange={handleChange}\r\n//               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//               title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//               required\r\n//               autoComplete=\"off\"\r\n//               placeholder=\"Bon Jovi\"\r\n//             />\r\n//           </InputDiv>\r\n//         </label>\r\n\r\n//         <label>\r\n//           <h2>Number</h2>\r\n//           <InputDiv>\r\n//             <IconContext.Provider value={{ size: '23px' }}>\r\n//               <FcPhoneAndroid />\r\n//             </IconContext.Provider>\r\n//             &nbsp;\r\n//             <Input\r\n//               type=\"tel\"\r\n//               name=\"number\"\r\n//               value={number}\r\n//               onChange={handleChange}\r\n//               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//               title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//               required\r\n//               autoComplete=\"off\"\r\n//               placeholder=\"123-456\"\r\n//             />\r\n//           </InputDiv>\r\n//         </label>\r\n//         <Button text=\"Add contact\" />\r\n//       </Form>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default ContactForm\r\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n// import * as actions from './redux/actions/explain-actions'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport AppBar from './components/AppBar'\n\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport ContactsView from './redux/views/ContactsView'\nimport HomeView from './redux/views/HomeView'\nimport RegisterView from './redux/views/RegisterView'\nimport LoginView from './redux/views/LoginView'\nimport Container from './components/Container'\nimport authOperations from './redux/operations/auth-operations'\nconsole.log('authOperations >>', authOperations)\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(authOperations.refreshCurrentUser())\n  }, [dispatch])\n\n  return (\n    <>\n      <AppBar />\n      <Container>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomeView />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterView />\n          </Route>\n          <Route path=\"/login\">\n            <LoginView />\n          </Route>\n          <Route path=\"/contacts\">\n            <ContactsView />\n          </Route>\n          <Redirect to=\"/\" />\n          <Route></Route>\n        </Switch>\n\n        <ToastContainer position=\"top-center\" autoClose={2000} />\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport { store, persistor } from './redux/store/phoneBook-store'\n\n// import { myAction } from './redux/actions/phoneBook-actions'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\nreportWebVitals()\n// // curried functions\n// const greeting = function (greeting) {\n//   return function (name) {\n//     console.log(`${greeting}, ${name}`)\n//   }\n// }\n\n// const fullGreeting = greeting('Nice to meet you')\n// fullGreeting('Adam')\n// fullGreeting('Annet')\n// greeting('Nice to meet you')('Alice')\n\n// const curriedGreeting = function (greeting) {\n//   return function (name) {\n//     console.log(`${greeting}, ${name}`)\n//   }\n// }\n\n// const fullCurriedGreeting = curriedGreeting('Hello, Mr.')\n// fullCurriedGreeting('John')\n// // console.log(fullCurriedGreeting())\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}